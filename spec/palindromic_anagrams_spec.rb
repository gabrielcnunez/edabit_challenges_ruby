require 'rspec'
require './lib/palindromic_anagrams'

RSpec.describe 'Palindromic Anagrams' do
  it 'takes word, returns boolean whether letters can be rearranged to make palindrome' do
    expect(is_palindrome_possible("rearcac")).to eq(true)
    expect(is_palindrome_possible("suhbeusheff")).to eq(true)
    expect(is_palindrome_possible("palindrome")).to eq(false)
    expect(is_palindrome_possible("yagnx")).to eq(false)
    expect(is_palindrome_possible("zgzqxljjp")).to eq(false)
    expect(is_palindrome_possible("tgmqkpdhnhatoco")).to eq(false)
    expect(is_palindrome_possible("akyka")).to eq(true)
    expect(is_palindrome_possible("kjyyrftnbsbq")).to eq(false)
    expect(is_palindrome_possible("jynmynqhcy")).to eq(false)
    expect(is_palindrome_possible("hfe")).to eq(false)
    expect(is_palindrome_possible("noon")).to eq(true)
    expect(is_palindrome_possible("azmkallbanpu")).to eq(false)
    expect(is_palindrome_possible("drrede")).to eq(true)
    expect(is_palindrome_possible("xmhwcocldjdnqvv")).to eq(false)
    expect(is_palindrome_possible("reparpe")).to eq(true)
    expect(is_palindrome_possible("jnavz")).to eq(false)
    expect(is_palindrome_possible("orort")).to eq(true)
    expect(is_palindrome_possible("mel")).to eq(false)
    expect(is_palindrome_possible("jdxknf")).to eq(false)
    expect(is_palindrome_possible("qo")).to eq(false)
    expect(is_palindrome_possible("neett")).to eq(true)
    expect(is_palindrome_possible("wow")).to eq(true)
    expect(is_palindrome_possible("avkkiaapiusuapspiip")).to eq(true)
    expect(is_palindrome_possible("aann")).to eq(true)
    expect(is_palindrome_possible("iivcc")).to eq(true)
    expect(is_palindrome_possible("akyka")).to eq(true)
    expect(is_palindrome_possible("eelvl")).to eq(true)
    expect(is_palindrome_possible("damam")).to eq(true)
    expect(is_palindrome_possible("mmo")).to eq(true)
    expect(is_palindrome_possible("ge")).to eq(false)
    expect(is_palindrome_possible("arrad")).to eq(true)
    expect(is_palindrome_possible("bq")).to eq(false)
    expect(is_palindrome_possible("djufyllynldw")).to eq(false)
    expect(is_palindrome_possible("reparpe")).to eq(true)
    expect(is_palindrome_possible("ttraoor")).to eq(true)
    expect(is_palindrome_possible("orort")).to eq(true)
    expect(is_palindrome_possible("asgas")).to eq(true)
    expect(is_palindrome_possible("t")).to eq(true)
    expect(is_palindrome_possible("tstsa")).to eq(true)
    expect(is_palindrome_possible("neett")).to eq(true)
    expect(is_palindrome_possible("wndnwrkpkihup")).to eq(false)
  end
end