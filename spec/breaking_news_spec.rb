require 'rspec'
require './lib/breaking_news'

RSpec.describe 'Breaking News' do
  it 'returns array of strings where each string contains single frame of what scrolling text looks like' do
    expect(news_at_ten('edabit', 10)).to eq([
    '          ',
    '         e',
    '        ed',
    '       eda',
    '      edab',
    '     edabi',
    '    edabit',
    '   edabit ',
    '  edabit  ',
    ' edabit   ',
    'edabit    ',
    'dabit     ',
    'abit      ',
    'bit       ',
    'it        ',
    't         ',
    '          '
    ])

    expect(news_at_ten('The latest news from News at Ten', 17)).to eq([
    '                 ',
    '                T',
    '               Th',
    '              The',
    '             The ',
    '            The l',
    '           The la',
    '          The lat',
    '         The late',
    '        The lates',
    '       The latest',
    '      The latest ',
    '     The latest n',
    '    The latest ne',
    '   The latest new',
    '  The latest news',
    ' The latest news ',
    'The latest news f',
    'he latest news fr',
    'e latest news fro',
    ' latest news from',
    'latest news from ',
    'atest news from N',
    'test news from Ne',
    'est news from New',
    'st news from News',
    't news from News ',
    ' news from News a',
    'news from News at',
    'ews from News at ',
    'ws from News at T',
    's from News at Te',
    ' from News at Ten',
    'from News at Ten ',
    'rom News at Ten  ',
    'om News at Ten   ',
    'm News at Ten    ',
    ' News at Ten     ',
    'News at Ten      ',
    'ews at Ten       ',
    'ws at Ten        ',
    's at Ten         ',
    ' at Ten          ',
    'at Ten           ',
    't Ten            ',
    ' Ten             ',
    'Ten              ',
    'en               ',
    'n                ',
    '                 ',
    ])

    expect(news_at_ten('Woman singlehandedly boosts seaside town economy with sea-shell business!', 7)).to eq([
    '       ', 
    '      W', 
    '     Wo', 
    '    Wom', 
    '   Woma', 
    '  Woman', 
    ' Woman ', 
    'Woman s', 
    'oman si', 
    'man sin', 
    'an sing', 
    'n singl', 
    ' single', 
    'singleh', 
    'ingleha', 
    'nglehan', 
    'glehand', 
    'lehande', 
    'ehanded', 
    'handedl', 
    'andedly', 
    'ndedly ', 
    'dedly b', 
    'edly bo', 
    'dly boo', 
    'ly boos', 
    'y boost', 
    ' boosts', 
    'boosts ', 
    'oosts s', 
    'osts se', 
    'sts sea', 
    'ts seas', 
    's seasi', 
    ' seasid', 
    'seaside', 
    'easide ', 
    'aside t', 
    'side to', 
    'ide tow', 
    'de town', 
    'e town ',
    ' town e',
    'town ec', 
    'own eco', 
    'wn econ', 
    'n econo', 
    ' econom', 
    'economy', 
    'conomy ', 
    'onomy w', 
    'nomy wi', 
    'omy wit', 
    'my with', 
    'y with ',
    ' with s',
    'with se', 
    'ith sea', 
    'th sea-', 
    'h sea-s', 
    ' sea-sh', 
    'sea-she', 
    'ea-shel', 
    'a-shell', 
    '-shell ', 
    'shell b', 
    'hell bu', 
    'ell bus', 
    'll busi', 
    'l busin', 
    ' busine', 
    'busines', 
    'usiness', 
    'siness!', 
    'iness! ', 
    'ness!  ',
    'ess!   ',
    'ss!    ',
    's!     ',
    '!      ',
    '       '
    ])

    expect(news_at_ten('news', 30)).to eq([
    '                              ', 
    '                             n', 
    '                            ne', 
    '                           new', 
    '                          news', 
    '                         news ', 
    '                        news  ', 
    '                       news   ', 
    '                      news    ', 
    '                     news     ', 
    '                    news      ', 
    '                   news       ', 
    '                  news        ', 
    '                 news         ', 
    '                news          ', 
    '               news           ', 
    '              news            ', 
    '             news             ', 
    '            news              ', 
    '           news               ', 
    '          news                ', 
    '         news                 ', 
    '        news                  ', 
    '       news                   ', 
    '      news                    ', 
    '     news                     ', 
    '    news                      ', 
    '   news                       ', 
    '  news                        ', 
    ' news                         ', 
    'news                          ', 
    'ews                           ', 
    'ws                            ', 
    's                             ', 
    '                              '
    ])

    expect(news_at_ten('Hello World', 11)).to eq([
    '           ',
    '          H',
    '         He',
    '        Hel',
    '       Hell', 
    '      Hello', 
    '     Hello ', 
    '    Hello W', 
    '   Hello Wo', 
    '  Hello Wor', 
    ' Hello Worl', 
    'Hello World', 
    'ello World ', 
    'llo World  ', 
    'lo World   ', 
    'o World    ', 
    ' World     ', 
    'World      ', 
    'orld       ', 
    'rld        ',
    'ld         ',
    'd          ',
    '           '
    ])
  end
end